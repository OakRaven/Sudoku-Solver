// Generated by CoffeeScript 1.3.3
(function(){this.SudokuSolver=function(){function e(e){this.puzzle=e,this.size=this.puzzle.length,this.squareSize=Math.sqrt(this.puzzle.length),this.hints=[]}return e.prototype.solve_cell=function(e,t){var n,r,i;if(t>=this.size)return!0;if(e>=this.size)return this.solve_cell(0,t+1);if(this.puzzle[e][t]!==0)return this.solve_cell(e+1,t);for(n=r=1,i=this.size;1<=i?r<=i:r>=i;n=1<=i?++r:--r)if(this.valid(e,t,n)){this.set(e,t,n);if(this.solve_cell(e+1,t))return!0}return this.set(e,t,0),!1},e.prototype.solve=function(){return this.attempts=0,this.hints=[[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0]],this.solve_cell(0,0),this.puzzle},e.prototype.get_hint=function(){var e,t,n,r,i,s,o,u;this.solve(),t=[];for(r=i=0,o=this.size-1;0<=o?i<=o:i>=o;r=0<=o?++i:--i)for(e=s=0,u=this.size-1;0<=u?s<=u:s>=u;e=0<=u?++s:--s)this.hints[r][e]!==0&&t.push({row:r,column:e,value:this.hints[r][e]});return t.length>0?(n=Math.floor(Math.random()*t.length+1),t[n]):null},e.prototype.set=function(e,t,n){if(this.attempts>1e4)throw"Invalid puzzle?";return this.attempts+=1,this.puzzle[e][t]=n,this.hints[e][t]=n},e.prototype.get=function(e,t){return this.puzzle[e][t]},e.prototype.is_valid_puzzle=function(){var e,t,n,r,i,s,o;for(t=r=0,s=this.size-1;0<=s?r<=s:r>=s;t=0<=s?++r:--r)for(e=i=0,o=this.size-1;0<=o?i<=o:i>=o;e=0<=o?++i:--i){n=this.puzzle[t][e];if(n>0&&!this.valid(t,e,n))return!1}return!0},e.prototype.valid=function(e,t,n){var r;return r=this.valid_in_row(e,t,n)&&this.valid_in_col(e,t,n)&&this.valid_in_square(e,t,n),r},e.prototype.valid_in_row=function(e,t,n){var r,i,s;for(r=i=0,s=this.size-1;0<=s?i<=s:i>=s;r=0<=s?++i:--i)if(r!==t&&this.get(e,r)===n)return!1;return!0},e.prototype.valid_in_col=function(e,t,n){var r,i,s;for(r=i=0,s=this.size-1;0<=s?i<=s:i>=s;r=0<=s?++i:--i)if(r!==e&&this.get(r,t)===n)return!1;return!0},e.prototype.valid_in_square=function(e,t,n){var r,i,s,o,u,a,f,l;o=Math.floor(e/this.squareSize)*this.squareSize,i=Math.floor(t/this.squareSize)*this.squareSize;for(s=u=0,f=this.squareSize-1;0<=f?u<=f:u>=f;s=0<=f?++u:--u)for(r=a=0,l=this.squareSize-1;0<=l?a<=l:a>=l;r=0<=l?++a:--a)if(o+s!==e&&i+r!==t&&this.get(o+s,i+r)===n)return!1;return!0},e}()}).call(this);